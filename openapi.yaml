openapi: 3.1.0
info:
  title: DY Crane Safety Management API
  description: Crane safety management system
  version: "1.0.0"
security:
  - BearerAuth: []
paths:
  /api/v1/auth/login:
    post:
      tags:
        - auth
      summary: User Login
      description: |
        Authenticates a user and returns an access token.
        **DEV Mode Behavior**:
        - This endpoint does **not** validate the password.
        - It assigns roles based on the email address prefix:
          - `driver*@...` -> `DRIVER`
          - `owner*@...` -> `OWNER`
          - `safety*@...` -> `SAFETY_MANAGER`
        - The `access_token` is a dummy string for development use.
        **TODO(strict)**: Replace with actual password verification.
      operationId: login
      security: [] # This endpoint is public
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserLogin"
      responses:
        "200":
          description: Successful Authentication
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokenResponse"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"

  /api/v1/auth/refresh:
    post:
      tags:
        - auth
      summary: Refresh Access Token
      description: |
        Obtains a new access token using the current valid token.
        **DEV Mode Behavior**:
        - This endpoint takes the existing `dev` token, parses it, and issues a new one.
        - It does not use a real refresh token.
        **TODO(strict)**: Implement proper refresh token logic.
      operationId: refresh_token
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokenResponse"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /api/v1/auth/logout:
    post:
      tags:
        - auth
      summary: User Logout
      description: |
        Logs the user out.
        **DEV Mode Behavior**:
        - This endpoint does nothing and simply returns a 204 No Content response.
        **TODO(strict)**: Implement server-side token invalidation.
      operationId: logout
      responses:
        "204":
          description: Successful Logout
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /api/v1/me:
    get:
      tags:
        - users
      summary: Get Current User Profile
      description: |
        Retrieves the profile of the currently authenticated user.
        The user is identified via the `Authorization` header.
        **TODO(strict)**: Enrich user model with details from the database.
      operationId: get_me
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CurrentUser"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /api/v1/me/permissions:
    get:
      tags:
        - users
      summary: Get User Permissions
      description: |
        Retrieves the permissions (scopes) for the current user based on their roles.
        **DEV Mode Behavior**:
        - This endpoint returns a hardcoded map of roles to permissions.
        **TODO(strict)**: Replace with a proper permissions service.
      operationId: get_my_permissions
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PermissionsResponse"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /api/v1/me/bootstrap:
    get:
      tags:
        - users
      summary: Get UI Bootstrap Data
      description: |
        Retrieves essential data needed by the client application immediately after login.
        **DEV Mode Behavior**:
        - Returns a hardcoded dictionary with zero-values.
        **TODO**: Replace with real data queries.
      operationId: get_bootstrap_data
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BootstrapResponse"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /api/v1/drivers/{driver_id}/active-assignments:
    get:
      tags:
        - users
      summary: Get Driver's Active Assignments
      description: |
        Retrieves the active assignments for a specific driver. Requires `DRIVER` role.
        **DEV Mode Behavior**:
        - Returns an empty list.
        **TODO(strict)**: DB 조회/페이징/정렬/필터, RBAC 재검증, 에러 규격 적용
      operationId: get_driver_active_assignments
      parameters:
        - name: driver_id
          in: path
          required: true
          schema:
            type: string
            title: Driver Id
        - name: date
          in: query
          required: false
          schema:
            type: string
            default: "today"
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ActiveAssignmentsResponse"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /api/v1/system/health:
    get:
      tags:
        - system
      summary: Health Check
      description: Health check endpoint for service monitoring.
      operationId: health_check
      security: []
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthCheckResponse"
  /api/v1/system/tools/reset-transactional:
    post:
      tags:
        - system
      summary: Reset Transactional Data
      description: "Reset only the transactional data in the database.\nPreserves master data like users, cranes, etc."
      operationId: reset_transactional_data
      security: []
      responses:
        "204":
          description: Successful Response
  /api/v1/system/tools/reset-full:
    post:
      tags:
        - system
      summary: Reset Full Database For Testing
      description: "Reset the entire database. FOR DEVELOPMENT/TESTING ONLY.\nWARNING: This is a destructive operation."
      operationId: reset_full_database
      security: []
      responses:
        "204":
          description: Successful Response

  /api/v1/catalog/crane-models:
    get:
      tags:
        - catalog
      summary: List Crane Models
      description: List all crane models with optional filtering.
      operationId: list_crane_models
      security: [] # Assuming catalog is public
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/CraneModelOut"
                type: array
                title: Response List Crane Models

  /api/v1/org/sites:
    get:
      tags:
        - organization
      summary: List Sites
      description: |
        List all construction sites. Requires `SAFETY_MANAGER` or `DRIVER` role.
        - If 'requested_by=me' is used, it returns sites requested by the current user.
        **TODO(strict)**: DB 조회/페이징/정렬/필터, RBAC 재검증, 에러 규격 적용
      operationId: list_sites_endpoint
      parameters:
        - name: requested_by
          in: query
          required: false
          schema:
            type: string
            enum: [me]
        - name: status
          in: query
          required: false
          schema:
            $ref: "#/components/schemas/SiteStatus"
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SiteOut"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
    post:
      tags:
        - organization
      summary: Create Site
      description: |
        Create a new construction site. Requires `SAFETY_MANAGER` role.
        **TODO**: Validate that payload.requested_by_id matches current_user.id
      operationId: create_site_endpoint
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SiteCreate"
      responses:
        "201":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SiteOut"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"

  /api/v1/org/cranes:
    get:
      tags:
        - organization
      summary: List Cranes
      description: List all cranes with optional filtering.
      operationId: list_cranes
      parameters:
        - name: owner_org_id
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: "null"
            title: Owner Org Id
        - name: status
          in: query
          required: false
          schema:
            anyOf:
              - $ref: "#/components/schemas/CraneStatus"
              - type: "null"
            title: Status
        - name: model_name
          in: query
          required: false
          schema:
            anyOf:
              - type: string
              - type: "null"
            title: Model Name
        - name: min_capacity
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
              - type: "null"
            title: Min Capacity
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CraneOut"
                title: Response List Cranes
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"

  /api/v1/org/owners:
    get:
      tags:
        - organization
      summary: List Owners
      description: "List all owners. If 'include=stats' is provided, includes statistics about their crane fleet."
      operationId: list_owners_endpoint
      parameters:
        - name: include
          in: query
          required: false
          schema:
            type: string
            title: Include
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/OwnerStatsOut"
                type: array
                title: Response List Owners
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"

  /api/v1/org/owners/{ownerId}/cranes:
    get:
      tags:
        - organization
      summary: List Owner Cranes
      description: |
        List all cranes owned by a specific organization. Requires `OWNER` role.
        If `summary=true`, returns status counts instead of a list.
        **TODO(strict)**: DB 조회/페이징/정렬/필터, RBAC 재검증, 에러 규격 적용
      operationId: list_owner_cranes_endpoint
      parameters:
        - name: ownerId
          in: path
          required: true
          schema:
            type: string
            title: OwnerId
        - name: status
          in: query
          required: false
          schema:
            $ref: "#/components/schemas/CraneStatus"
        - name: model_name
          in: query
          required: false
          schema:
            type: string
        - name: min_capacity
          in: query
          required: false
          schema:
            type: integer
        - name: summary
          in: query
          required: false
          schema:
            type: boolean
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                oneOf:
                  - type: array
                    items:
                      $ref: "#/components/schemas/CraneOut"
                  - $ref: "#/components/schemas/CraneSummaryResponse"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
  # Other endpoints are omitted for brevity, but would require security tags
  # ...

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |
        JWT-based authentication.
        **DEV Mode**: Use a dummy token in the format `dev:{user_id}:{ROLE1,ROLE2}`.
        **TODO(strict)**: This will be replaced with a standard JWT.

  schemas:
    # --- New Auth Schemas ---
    UserLogin:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password
          minLength: 8
      title: UserLogin
      description: Schema for user login request.

    CurrentUser:
      type: object
      properties:
        id:
          type: string
        roles:
          type: array
          items:
            type: string
        email:
          type: string
          format: email
        name:
          type: string
      required:
        - id
        - roles
      title: CurrentUser
      description: Schema for the current user's identity.

    TokenResponse:
      type: object
      properties:
        access_token:
          type: string
        refresh_token:
          type: string
          nullable: true
        expires_in:
          type: integer
          default: 3600
        token_type:
          type: string
          default: "Bearer"
        user:
          $ref: "#/components/schemas/CurrentUser"
        capabilities:
          type: object
          nullable: true
        server_time:
          type: string
          format: date-time
      required:
        - access_token
        - expires_in
        - token_type
        - user
        - server_time
      title: TokenResponse
      description: Schema for the response after a successful login.

    PermissionsResponse:
      type: object
      properties:
        scopes:
          type: array
          items:
            type: string
      title: PermissionsResponse
      description: A list of permission scopes for the current user.

    BootstrapResponse:
      type: object
      properties:
        notifications_unread:
          type: integer
        recent_task_ids:
          type: array
          items:
            type: string
      title: BootstrapResponse
      description: Essential data for UI initialization.

    ActiveAssignmentsResponse:
      type: object
      properties:
        items:
          type: array
          items: {}
        total:
          type: integer
      title: ActiveAssignmentsResponse

    CraneSummaryResponse:
      type: object
      properties:
        status_counts:
          type: object
          properties:
            NORMAL:
              type: integer
            REPAIR:
              type: integer
            INBOUND:
              type: integer
      title: CraneSummaryResponse

    ErrorResponse:
      type: object
      properties:
        detail:
          type: string
      title: ErrorResponse
      description: Standard error response schema.

    # --- From original file ---
    AssignCraneIn:
      properties:
        site_id:
          type: string
          title: Site Id
          description: Target site ID
        crane_id:
          type: string
          title: Crane Id
          description: Crane to assign
        safety_manager_id:
          type: string
          title: Safety Manager Id
          description: SAFETY_MANAGER user ID
        start_date:
          type: string
          format: date
          title: Start Date
          description: Assignment start date
        end_date:
          anyOf:
            - type: string
              format: date
            - type: "null"
          title: End Date
          description: Assignment end date
      type: object
      required:
        - site_id
        - crane_id
        - safety_manager_id
        - start_date
      title: AssignCraneIn
      description: Schema for assigning a crane to a site.
    AssignDriverIn:
      properties:
        site_crane_id:
          type: string
          title: Site Crane Id
          description: Site-crane assignment ID
        driver_id:
          type: string
          title: Driver Id
          description: DRIVER user ID
        start_date:
          type: string
          format: date
          title: Start Date
          description: Driver assignment start date
        end_date:
          anyOf:
            - type: string
              format: date
            - type: "null"
          title: End Date
          description: Driver assignment end date
      type: object
      required:
        - site_crane_id
        - driver_id
        - start_date
      title: AssignDriverIn
      description: Schema for assigning a driver to a site-crane combination.
    AssignmentResponse:
      properties:
        assignment_id:
          type: string
          title: Assignment Id
          description: Created assignment ID
      type: object
      required:
        - assignment_id
      title: AssignmentResponse
      description: Schema for crane assignment operation responses.
    AttendanceIn:
      properties:
        driver_assignment_id:
          type: string
          title: Driver Assignment Id
          description: Driver assignment ID
        work_date:
          type: string
          format: date
          title: Work Date
          description: Work date
        check_in_at:
          type: string
          format: date-time
          title: Check In At
          description: Check-in timestamp
        check_out_at:
          anyOf:
            - type: string
              format: date-time
            - type: "null"
          title: Check Out At
          description: Check-out timestamp
      type: object
      required:
        - driver_assignment_id
        - work_date
        - check_in_at
      title: AttendanceIn
      description: Schema for recording driver attendance.
    AttendanceResponse:
      properties:
        attendance_id:
          type: string
          title: Attendance Id
          description: Created attendance record ID
      type: object
      required:
        - attendance_id
      title: AttendanceResponse
      description: Schema for attendance recording responses.
    CraneModelOut:
      properties:
        id:
          type: string
          title: Id
        model_name:
          type: string
          title: Model Name
        max_lifting_capacity_ton_m:
          anyOf:
            - type: integer
            - type: "null"
          title: Max Lifting Capacity Ton M
        max_working_height_m:
          anyOf:
            - type: number
            - type: "null"
          title: Max Working Height M
        max_working_radius_m:
          anyOf:
            - type: number
            - type: "null"
          title: Max Working Radius M
        optional_specs:
          anyOf:
            - items:
                type: string
              type: array
            - type: "null"
          title: Optional Specs
      type: object
      required:
        - id
        - model_name
      title: CraneModelOut
      description: Schema for crane model specifications in API responses.
    CraneOut:
      properties:
        id:
          type: string
          title: Id
        owner_org_id:
          type: string
          title: Owner Org Id
        serial_no:
          anyOf:
            - type: string
            - type: "null"
          title: Serial No
        status:
          $ref: "#/components/schemas/CraneStatus"
        model:
          $ref: "#/components/schemas/CraneModelOut"
        created_at:
          type: string
          format: date-time
          title: Created At
        updated_at:
          type: string
          format: date-time
          title: Updated At
      type: object
      required:
        - id
        - owner_org_id
        - status
        - model
        - created_at
        - updated_at
      title: CraneOut
      description: Schema for crane information in API responses.
    CraneStatus:
      type: string
      enum:
        - NORMAL
        - REPAIR
        - INBOUND
      title: CraneStatus
      description: Crane operational status values.
    DocItemResponse:
      properties:
        item_id:
          type: string
          title: Item Id
          description: Document item ID
        status:
          $ref: "#/components/schemas/DocItemStatus"
          description: Current document status
      type: object
      required:
        - item_id
        - status
      title: DocItemResponse
      description: Schema for document review responses.
    DocItemReviewIn:
      properties:
        item_id:
          type: string
          title: Item Id
          description: Document item ID
        reviewer_id:
          type: string
          title: Reviewer Id
          description: SAFETY_MANAGER user ID
        approve:
          type: boolean
          title: Approve
          description: True to approve, False to reject
      type: object
      required:
        - item_id
        - reviewer_id
        - approve
      title: DocItemReviewIn
      description: Schema for reviewing a document item.
    DocItemStatus:
      type: string
      enum:
        - PENDING
        - SUBMITTED
        - APPROVED
        - REJECTED
      title: DocItemStatus
      description: Document item review status.
    DocItemSubmitIn:
      properties:
        request_id:
          type: string
          title: Request Id
          description: Document request ID
        doc_type:
          type: string
          minLength: 1
          title: Doc Type
          description: Document type
        file_url:
          type: string
          minLength: 1
          format: uri
          title: File Url
          description: HTTPS URL to document file
      type: object
      required:
        - request_id
        - doc_type
        - file_url
      title: DocItemSubmitIn
      description: Schema for submitting a document item.
    DocRequestIn:
      properties:
        site_id:
          type: string
          title: Site Id
          description: Site ID
        driver_id:
          type: string
          title: Driver Id
          description: Driver user ID
        requested_by_id:
          type: string
          title: Requested By Id
          description: SAFETY_MANAGER user ID
        due_date:
          anyOf:
            - type: string
              format: date
            - type: "null"
          title: Due Date
          description: Document submission due date
      type: object
      required:
        - site_id
        - driver_id
        - requested_by_id
      title: DocRequestIn
      description: Schema for creating a document request.
    DocRequestResponse:
      properties:
        request_id:
          type: string
          title: Request Id
          description: Created document request ID
      type: object
      required:
        - request_id
      title: DocRequestResponse
      description: Schema for document request creation responses.
    DocSubmitResponse:
      properties:
        item_id:
          type: string
          title: Item Id
          description: Created document item ID
      type: object
      required:
        - item_id
      title: DocSubmitResponse
      description: Schema for document submission responses.
    DriverAssignmentResponse:
      properties:
        driver_assignment_id:
          type: string
          title: Driver Assignment Id
          description: Created driver assignment ID
      type: object
      required:
        - driver_assignment_id
      title: DriverAssignmentResponse
      description: Schema for driver assignment operation responses.
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: "#/components/schemas/ValidationError"
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    HealthCheckResponse:
      properties:
        status:
          type: string
          title: Status
          description: Service status
        timestamp:
          type: string
          format: date-time
          title: Timestamp
          description: Current server time
        database_healthy:
          type: boolean
          title: Database Healthy
          description: Database connectivity status
      type: object
      required:
        - status
        - timestamp
        - database_healthy
      title: HealthCheckResponse
      description: Schema for health check endpoint response.
    OwnerStatsOut:
      properties:
        id:
          type: string
          title: Id
        name:
          type: string
          title: Name
        total_cranes:
          type: integer
          title: Total Cranes
        available_cranes:
          type: integer
          title: Available Cranes
      type: object
      required:
        - id
        - name
        - total_cranes
        - available_cranes
      title: OwnerStatsOut
      description: Schema for an owner organization with crane fleet statistics.
    RequestCreate:
      properties:
        type:
          $ref: "#/components/schemas/RequestType"
        requester_id:
          type: string
          title: Requester Id
        target_entity_id:
          type: string
          title: Target Entity Id
        related_entity_id:
          anyOf:
            - type: string
            - type: "null"
          title: Related Entity Id
        notes:
          anyOf:
            - type: string
            - type: "null"
          title: Notes
      type: object
      required:
        - type
        - requester_id
        - target_entity_id
      title: RequestCreate
      description: Schema for creating a generic request.
    RequestOut:
      properties:
        id:
          type: string
          title: Id
        type:
          $ref: '#/components/schemas/RequestType'
        status:
          $ref: '#/components/schemas/RequestStatus'
        requester_id:
          type: string
          title: Requester Id
        approver_id:
          anyOf:
            - type: string
            - type: "null"
          title: Approver Id
        target_entity_id:
          anyOf:
            - type: string
            - type: "null"
          title: Target Entity Id
        related_entity_id:
          anyOf:
            - type: string
            - type: "null"
          title: Related Entity Id
        notes:
          anyOf:
            - type: string
            - type: "null"
          title: Notes
        requested_at:
          type: string
          format: date-time
          title: Requested At
        responded_at:
          anyOf:
            - type: string
              format: date-time
            - type: "null"
          title: Responded At
      type: object
      required:
        - id
        - type
        - status
        - requester_id
        - requested_at
      title: RequestOut
      description: Schema for request information in API responses.
    RequestStatus:
      type: string
      enum:
        - PENDING
        - APPROVED
        - REJECTED
      title: RequestStatus
      description: Generic request statuses.
    RequestType:
      type: string
      enum:
        - CRANE_DEPLOY
      title: RequestType
      description: Generic request types.
    RequestUpdate:
      properties:
        status:
          $ref: '#/components/schemas/RequestStatus'
        approver_id:
          type: string
          title: Approver Id
        notes:
          anyOf:
            - type: string
            - type: "null"
          title: Notes
      type: object
      required:
        - status
        - approver_id
      title: RequestUpdate
      description: Schema for approving or rejecting a request.
    SiteCreate:
      properties:
        name:
          type: string
          maxLength: 255
          minLength: 1
          title: Name
          description: Site name
        address:
          anyOf:
            - type: string
            - type: "null"
          title: Address
          description: Site address
        start_date:
          type: string
          format: date
          title: Start Date
          description: Project start date
        end_date:
          type: string
          format: date
          title: End Date
          description: Project end date
        requested_by_id:
          type: string
          title: Requested By Id
          description: SAFETY_MANAGER user ID
      type: object
      required:
        - name
        - start_date
        - end_date
        - requested_by_id
      title: SiteCreate
      description: Schema for creating a new construction site.
      example:
        address: 123 Main Street, Seoul
        end_date: "2025-12-31"
        name: Downtown Construction Site
        requested_by_id: safety-manager-uuid
        start_date: "2025-09-01"
    SiteOut:
      properties:
        id:
          type: string
          title: Id
        name:
          type: string
          title: Name
        address:
          anyOf:
            - type: string
            - type: "null"
          title: Address
        start_date:
          type: string
          format: date
          title: Start Date
        end_date:
          type: string
          format: date
          title: End Date
        status:
          $ref: '#/components/schemas/SiteStatus'
        requested_by_id:
          type: string
          title: Requested By Id
        approved_by_id:
          anyOf:
            - type: string
            - type: "null"
          title: Approved By Id
        requested_at:
          type: string
          format: date-time
          title: Requested At
        approved_at:
          anyOf:
            - type: string
              format: date-time
            - type: "null"
          title: Approved At
        created_at:
          type: string
          format: date-time
          title: Created At
        updated_at:
          type: string
          format: date-time
          title: Updated At
      type: object
      required:
        - id
        - name
        - start_date
        - end_date
        - status
        - requested_by_id
        - requested_at
        - created_at
        - updated_at
      title: SiteOut
      description: Schema for site information in API responses.
    SiteStatus:
      type: string
      enum:
        - PENDING_APPROVAL
        - ACTIVE
        - REJECTED
        - COMPLETED
      title: SiteStatus
      description: Construction site status values.
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
              - type: string
              - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
        - loc
        - msg
        - type
      title: ValidationError
